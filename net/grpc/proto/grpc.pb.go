// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Void is empty message struct.
type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{0}
}

func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (m *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(m, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

// ObjectID is a struct which includes documents object id definiion.
type ObjectID struct {
	ObjectID             string   `protobuf:"bytes,1,opt,name=objectID,proto3" json:"objectID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjectID) Reset()         { *m = ObjectID{} }
func (m *ObjectID) String() string { return proto.CompactTextString(m) }
func (*ObjectID) ProtoMessage()    {}
func (*ObjectID) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{1}
}

func (m *ObjectID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectID.Unmarshal(m, b)
}
func (m *ObjectID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectID.Marshal(b, m, deterministic)
}
func (m *ObjectID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectID.Merge(m, src)
}
func (m *ObjectID) XXX_Size() int {
	return xxx_messageInfo_ObjectID.Size(m)
}
func (m *ObjectID) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectID.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectID proto.InternalMessageInfo

func (m *ObjectID) GetObjectID() string {
	if m != nil {
		return m.ObjectID
	}
	return ""
}

// Count describes a value of removed or updated documents.
type Count struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Count) Reset()         { *m = Count{} }
func (m *Count) String() string { return proto.CompactTextString(m) }
func (*Count) ProtoMessage()    {}
func (*Count) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{2}
}

func (m *Count) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Count.Unmarshal(m, b)
}
func (m *Count) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Count.Marshal(b, m, deterministic)
}
func (m *Count) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Count.Merge(m, src)
}
func (m *Count) XXX_Size() int {
	return xxx_messageInfo_Count.Size(m)
}
func (m *Count) XXX_DiscardUnknown() {
	xxx_messageInfo_Count.DiscardUnknown(m)
}

var xxx_messageInfo_Count proto.InternalMessageInfo

func (m *Count) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

// Person is a struct which describes the personal information.
type Person struct {
	DocumentID           string   `protobuf:"bytes,1,opt,name=documentID,proto3" json:"documentID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LastName             string   `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Phone                string   `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Email                string   `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	YearOfBirth          int32    `protobuf:"varint,6,opt,name=yearOfBirth,proto3" json:"yearOfBirth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{3}
}

func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (m *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(m, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetDocumentID() string {
	if m != nil {
		return m.DocumentID
	}
	return ""
}

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Person) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Person) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Person) GetYearOfBirth() int32 {
	if m != nil {
		return m.YearOfBirth
	}
	return 0
}

// PresonalDataList includes a slice of a Person.
type PersonalDataList struct {
	Person               []*Person `protobuf:"bytes,1,rep,name=person,proto3" json:"person,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PersonalDataList) Reset()         { *m = PersonalDataList{} }
func (m *PersonalDataList) String() string { return proto.CompactTextString(m) }
func (*PersonalDataList) ProtoMessage()    {}
func (*PersonalDataList) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{4}
}

func (m *PersonalDataList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonalDataList.Unmarshal(m, b)
}
func (m *PersonalDataList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonalDataList.Marshal(b, m, deterministic)
}
func (m *PersonalDataList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalDataList.Merge(m, src)
}
func (m *PersonalDataList) XXX_Size() int {
	return xxx_messageInfo_PersonalDataList.Size(m)
}
func (m *PersonalDataList) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalDataList.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalDataList proto.InternalMessageInfo

func (m *PersonalDataList) GetPerson() []*Person {
	if m != nil {
		return m.Person
	}
	return nil
}

func init() {
	proto.RegisterType((*Void)(nil), "proto.Void")
	proto.RegisterType((*ObjectID)(nil), "proto.ObjectID")
	proto.RegisterType((*Count)(nil), "proto.Count")
	proto.RegisterType((*Person)(nil), "proto.Person")
	proto.RegisterType((*PersonalDataList)(nil), "proto.PersonalDataList")
}

func init() { proto.RegisterFile("grpc.proto", fileDescriptor_bedfbfc9b54e5600) }

var fileDescriptor_bedfbfc9b54e5600 = []byte{
	// 318 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x4a, 0xfb, 0x40,
	0x10, 0xc6, 0x9b, 0x7f, 0x92, 0xa5, 0xff, 0x69, 0x45, 0x19, 0x04, 0x97, 0x80, 0x12, 0x16, 0xd4,
	0x78, 0xe9, 0xa1, 0x9e, 0xbc, 0x6a, 0x2f, 0x05, 0xb1, 0x12, 0xd0, 0xfb, 0x36, 0x5d, 0x6d, 0xa4,
	0xd9, 0x0d, 0x9b, 0xad, 0xe0, 0x0b, 0xf9, 0x66, 0xbe, 0x87, 0xec, 0x6e, 0x6a, 0x9b, 0xea, 0x29,
	0xf3, 0xfb, 0xe6, 0x9b, 0xf9, 0xc2, 0x2c, 0xc0, 0xab, 0xae, 0x8b, 0x51, 0xad, 0x95, 0x51, 0x18,
	0xbb, 0x0f, 0x23, 0x10, 0x3d, 0xab, 0x72, 0xc1, 0x2e, 0xa0, 0x3f, 0x9b, 0xbf, 0x89, 0xc2, 0x4c,
	0x27, 0x98, 0x40, 0x5f, 0xb5, 0x35, 0x0d, 0xd2, 0x20, 0xfb, 0x9f, 0xff, 0x30, 0x3b, 0x85, 0xf8,
	0x4e, 0xad, 0xa5, 0xc1, 0x63, 0x88, 0x0b, 0x5b, 0x38, 0x47, 0x98, 0x7b, 0x60, 0x9f, 0x01, 0x90,
	0x47, 0xa1, 0x1b, 0x25, 0xf1, 0x0c, 0x60, 0xa1, 0x8a, 0x75, 0x25, 0xe4, 0x76, 0xcf, 0x8e, 0x82,
	0x08, 0x91, 0xe4, 0x95, 0xa0, 0xff, 0x5c, 0xc7, 0xd5, 0x36, 0x79, 0xc5, 0x1b, 0xf3, 0x60, 0xf5,
	0xd0, 0x27, 0x6f, 0xd8, 0x06, 0xd6, 0x4b, 0x25, 0x05, 0x8d, 0x5c, 0xc3, 0x83, 0x55, 0x45, 0xc5,
	0xcb, 0x15, 0x8d, 0xbd, 0xea, 0x00, 0x53, 0x18, 0x7c, 0x08, 0xae, 0x67, 0x2f, 0xb7, 0xa5, 0x36,
	0x4b, 0x4a, 0xd2, 0x20, 0x8b, 0xf3, 0x5d, 0x89, 0xdd, 0xc0, 0x91, 0xff, 0x4f, 0xbe, 0x9a, 0x70,
	0xc3, 0xef, 0xcb, 0xc6, 0xe0, 0x39, 0x90, 0xda, 0x69, 0x34, 0x48, 0xc3, 0x6c, 0x30, 0x3e, 0xf0,
	0xa7, 0x1a, 0x79, 0x63, 0xde, 0x36, 0xc7, 0x5f, 0x01, 0x0c, 0x77, 0x67, 0x71, 0x04, 0x91, 0x9b,
	0x1f, 0xb4, 0x7e, 0x7b, 0xd0, 0xe4, 0xa4, 0x33, 0xbc, 0x4d, 0x61, 0x3d, 0xbc, 0x84, 0x70, 0x26,
	0x05, 0x1e, 0xb6, 0x8e, 0xcd, 0xdd, 0x93, 0x6e, 0x9e, 0x33, 0x92, 0xa7, 0x7a, 0xc1, 0x8d, 0xc0,
	0x6e, 0x2b, 0x19, 0xb6, 0xe8, 0x9e, 0x82, 0xf5, 0x30, 0x03, 0x32, 0x95, 0x8d, 0xd0, 0x66, 0xdf,
	0xf8, 0x6b, 0xe5, 0x15, 0x90, 0x5c, 0x54, 0xea, 0xfd, 0x8f, 0xf8, 0xbd, 0xa5, 0x73, 0xe2, 0xf0,
	0xfa, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xf6, 0xbd, 0xb0, 0xaa, 0x36, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PersonalDataClient is the client API for PersonalData service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PersonalDataClient interface {
	// List returns PersonalDataList slice.
	List(ctx context.Context, in *Void, opts ...grpc.CallOption) (*PersonalDataList, error)
	// One returns Person object information.
	One(ctx context.Context, in *ObjectID, opts ...grpc.CallOption) (*Person, error)
	// Update returns a count of udated documents.
	Update(ctx context.Context, in *Person, opts ...grpc.CallOption) (*Count, error)
	// Insert returns a Person information which added in system.
	Insert(ctx context.Context, in *Person, opts ...grpc.CallOption) (*Person, error)
	// Remove returns a count of removed documents.
	Remove(ctx context.Context, in *ObjectID, opts ...grpc.CallOption) (*Count, error)
}

type personalDataClient struct {
	cc *grpc.ClientConn
}

func NewPersonalDataClient(cc *grpc.ClientConn) PersonalDataClient {
	return &personalDataClient{cc}
}

func (c *personalDataClient) List(ctx context.Context, in *Void, opts ...grpc.CallOption) (*PersonalDataList, error) {
	out := new(PersonalDataList)
	err := c.cc.Invoke(ctx, "/proto.PersonalData/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *personalDataClient) One(ctx context.Context, in *ObjectID, opts ...grpc.CallOption) (*Person, error) {
	out := new(Person)
	err := c.cc.Invoke(ctx, "/proto.PersonalData/One", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *personalDataClient) Update(ctx context.Context, in *Person, opts ...grpc.CallOption) (*Count, error) {
	out := new(Count)
	err := c.cc.Invoke(ctx, "/proto.PersonalData/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *personalDataClient) Insert(ctx context.Context, in *Person, opts ...grpc.CallOption) (*Person, error) {
	out := new(Person)
	err := c.cc.Invoke(ctx, "/proto.PersonalData/Insert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *personalDataClient) Remove(ctx context.Context, in *ObjectID, opts ...grpc.CallOption) (*Count, error) {
	out := new(Count)
	err := c.cc.Invoke(ctx, "/proto.PersonalData/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PersonalDataServer is the server API for PersonalData service.
type PersonalDataServer interface {
	// List returns PersonalDataList slice.
	List(context.Context, *Void) (*PersonalDataList, error)
	// One returns Person object information.
	One(context.Context, *ObjectID) (*Person, error)
	// Update returns a count of udated documents.
	Update(context.Context, *Person) (*Count, error)
	// Insert returns a Person information which added in system.
	Insert(context.Context, *Person) (*Person, error)
	// Remove returns a count of removed documents.
	Remove(context.Context, *ObjectID) (*Count, error)
}

// UnimplementedPersonalDataServer can be embedded to have forward compatible implementations.
type UnimplementedPersonalDataServer struct {
}

func (*UnimplementedPersonalDataServer) List(ctx context.Context, req *Void) (*PersonalDataList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedPersonalDataServer) One(ctx context.Context, req *ObjectID) (*Person, error) {
	return nil, status.Errorf(codes.Unimplemented, "method One not implemented")
}
func (*UnimplementedPersonalDataServer) Update(ctx context.Context, req *Person) (*Count, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedPersonalDataServer) Insert(ctx context.Context, req *Person) (*Person, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Insert not implemented")
}
func (*UnimplementedPersonalDataServer) Remove(ctx context.Context, req *ObjectID) (*Count, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}

func RegisterPersonalDataServer(s *grpc.Server, srv PersonalDataServer) {
	s.RegisterService(&_PersonalData_serviceDesc, srv)
}

func _PersonalData_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalDataServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.PersonalData/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalDataServer).List(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersonalData_One_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ObjectID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalDataServer).One(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.PersonalData/One",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalDataServer).One(ctx, req.(*ObjectID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersonalData_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Person)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalDataServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.PersonalData/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalDataServer).Update(ctx, req.(*Person))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersonalData_Insert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Person)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalDataServer).Insert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.PersonalData/Insert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalDataServer).Insert(ctx, req.(*Person))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersonalData_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ObjectID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalDataServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.PersonalData/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalDataServer).Remove(ctx, req.(*ObjectID))
	}
	return interceptor(ctx, in, info, handler)
}

var _PersonalData_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.PersonalData",
	HandlerType: (*PersonalDataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _PersonalData_List_Handler,
		},
		{
			MethodName: "One",
			Handler:    _PersonalData_One_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _PersonalData_Update_Handler,
		},
		{
			MethodName: "Insert",
			Handler:    _PersonalData_Insert_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _PersonalData_Remove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc.proto",
}
